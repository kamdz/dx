"use strict";var O=Object.create;var g=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var J=(t,e,s,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of A(e))!b.call(t,r)&&r!==s&&g(t,r,{get:()=>e[r],enumerable:!(i=S(e,r))||i.enumerable});return t};var _=(t,e,s)=>(s=t!=null?O(N(t)):{},J(e||!t||!t.__esModule?g(s,"default",{value:t,enumerable:!0}):s,t));var u=require("child_process"),w=_(require("os"),1),n=require("path"),a=_(require("fs-extra"),1),E=require("listr2"),P=_(require("picocolors"),1),f=async()=>{let t="kamdz/dx",e=`https://github.com/${t}`,s=a.default.mkdtempSync((0,n.join)(w.default.tmpdir(),"kamdz_dx-")),i=process.cwd(),r=[".git","bin","src","package.json","README.MD","yarn.lock"],d={name:"__PROJECT_NAME__",version:"0.0.0-development",private:!0,description:"",keywords:[],bugs:{url:"https://github.com/__PROJECT_NAME__/issues"},repository:{type:"git",url:"https://github.com/__PROJECT_NAME__"},author:{name:"Kamil Dzwonkowski",email:"npm@kamdz.dev",url:"https://github.com/kamdz"},dependencies:{}},h=new E.Listr([{title:`Updating project with latest ${P.default.bold(`@${t}`)}`,task:(k,y)=>y.newListr([{title:"Cloning template",task:async()=>{(0,u.execSync)(`git clone ${e} ${s} --quiet`)}},{title:"Syncing",task:(R,j)=>{let l=a.default.readdirSync(s).filter(c=>!r.includes(c)).map(c=>({title:c,task:async()=>{await a.default.copy((0,n.join)(s,c),(0,n.join)(i,c))}}));return l.push({title:"package.json",task:async()=>{a.default.readJSON((0,n.join)(i,"package.json")).then(async c=>{let m=await a.default.readJSON((0,n.join)(s,"package.json")),p={...c};Object.keys(p).forEach(o=>{o in d&&(["scripts","devDependencies"].includes(o)?p[o]=Object.assign(p[o],m[o]):p[o]=m[o])}),await a.default.writeJSON((0,n.join)(i,"package.json"),p,{spaces:"  "})}).catch(async()=>{let m={...await a.default.readJSON((0,n.join)(s,"package.json"))};Object.keys(d).forEach(o=>{m[o]=d[o]}),await a.default.writeJSON((0,n.join)(i,"package.json"),m,{spaces:"  "})})}}),j.newListr(l,{concurrent:!0})}}],{rendererOptions:{collapseSubtasks:!1}})}]);try{await h.run(),await a.default.remove(s)}catch(k){console.error(k),process.exit(1)}};f();
//# sourceMappingURL=index.cjs.map